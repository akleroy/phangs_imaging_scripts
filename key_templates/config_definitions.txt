##########################################################################
# CONFIG_DEFINITIONS KEY
##########################################################################

# The pipeline treats most data sets as a combination like:

# target_config_product.ms or target_config_product.image

# i.e., a combination of a "target", the "config"uration used to
# observe it, and the spectral "product" being considered.

# This file defines the file defines the spectral "products" and array
# "configurations" that to be processed and combined by the
# pipeline. Here, the user provides detailed parameters for each
# product and config. The file has three columns:
 
# Column 1: type of field (see below)

# Column 2: name (this can be anything, it will appear in file names)

# Column 3: parameters (write as literal dictionaries with no spaces)
 
# ------------------------------------------------------------------------
# Column 1 : "type of field"
# ------------------------------------------------------------------------

# This must be one of the following:

# "line_product" : a spectral line imaging product (e.g., "lowresCO21")

# "cont_product" : a continuum imaging product (e.g., "mmcont")

# "interf_config" : a configuration containing only interferometric data (e.g., "VLAC")

# "feather_config" : a configuration combining single dish and
#  interferometric data (e.g., "7m+tp")

# ------------------------------------------------------------------------
# Column 2 : "name"
# ------------------------------------------------------------------------

# This can be anything, but should avoid spaces and _ characters to
# avoid confusion.

# ------------------------------------------------------------------------
# Column 3 : "parameters"
# ------------------------------------------------------------------------

# This is evaluated as a literal dictionary (i.e., the line is fed to
# python). Please avoid spaces and follow the fields required below.

# N.B. Configuration definitions can repeat multiple lines, in which
# case the parameters are accumulated across all lines.
##########################################################################

# ------------------------------------------------------------------------
# line_product : a spectral line data product
# ------------------------------------------------------------------------

# This defines a spectral line product, which will be produced by
# clean using specmode='cube'. The name can be anything, it does not
# have to be the line name, e.g., "lowresco" is fine.

# The parameters need to include:

# 'line_tag' : this is the line tag we use in our pipeline and should
# agree with the line names in our "line_list.py" module.

# 'channel_kms', this is the target channel width of our output image
# cubes in units of km/s. Depending on the chosen regridding algorithm
# this may be the exact channel width or an approximate target.

# PHANGS-ALMA examples:

#line_product    co21      {'line_tag':'co21','channel_kms':2.5}
#line_product    13co21    {'line_tag':'13co21','channel_kms':2.5}
#line_product    c18o21    {'line_tag':'c18o21','channel_kms':6.0}

# ------------------------------------------------------------------------
# cont_product : a continuum data product
# ------------------------------------------------------------------------

# This defines a continuum product, which will be produced by clean
# using specmode='mfs'. The name can be anything, e.g., '850umcont'.

# These parameters need to be included (use [] for none):

# 'lines_to_flag' : these are the spectral line families (for groups
# of lines) or spectral line tags (for individual lines) to exclude
# (at the velocity and bandwidth of the source) from continuum
# imaging. They need to be known by our line_list.py . 

# PHANGS-ALMA examples:

#cont_product    cont      {'lines_to_flag':['co','13co','c18o','hcn','hcop']}

# ------------------------------------------------------------------------
# interferometry configuation
# ------------------------------------------------------------------------

# This defines an interferometric configuration, which is a collection
# of data only from interferometric arrays. These will eventually be
# combined into a single visibility file and imaged together. The name
# can be anything, e.g., 'BCD' or '12m+7m'.

# These parameters need to be included:
 
# 'array_tags' : defines a list of 'array_tag's to be concatenated
# into this config. These array tags are assigned to each measurement
# set in the "ms_file_key.txt", which lists the visibility data. Thus,
# they only mean anything inasmuch as they agree with those defined in
# that file. The natural mapping is, e.g., VLA config, ALMA array, and
# maybe a code roughly indicating the ALMA subarray (e.g.,
# "12mext"). This is fundamentally up to the user to decide.
 
# 'clean_scales_arcsec' : These are the scales used for multiscale
# cleaning of data from this array. The units are arcseconds.

# 'res_min_arcsec', 'res_max_arcsec' : these define the minimum and
# maximum angular resolution to be used in postprocessing this configuration. 

# 'res_step_factor' : This is an algorithmic tuning parameter that
# sets the multiplicative step size using in postprocessing
# convolution. This may be deprecated in the near future.

# PHANGS-ALMA examples:

#interf_config   12m       {'array_tags':['12m']}
#interf_config   12m       {'res_min_arcsec':0.5,'res_max_arcsec':7.5,'res_step_factor':1.1}
#interf_config   12m       {'clean_scales_arcsec':[0,1,2.5,5.0]}

#interf_config   12m+7m    {'array_tags':['12m','7m']}
#interf_config   12m+7m    {'res_min_arcsec':0.5,'res_max_arcsec':7.5,'res_step_factor':1.1}
#interf_config   12m+7m    {'clean_scales_arcsec':[0,1,2.5,5.0,10.0]}

#interf_config   7m        {'array_tags':['7m']}
#interf_config   7m        {'res_min_arcsec':5.0,'res_max_arcsec':15.0,'res_step_factor':1.1}
#interf_config   7m        {'clean_scales_arcsec':[0,5.0,10.0]}

# ------------------------------------------------------------------------
# feathering configuation (combining single dish and interferometry data)
# ------------------------------------------------------------------------

# This defines an feather configuration, which is a combination of an
# interferometric configuration and total power data. The name can be
# anything, e.g., 'BCD+tp' or '12m+7m+tp'.

# These parameters need to be included:
 
# 'interf_config' : each feather config needs to map back to an
# interferometric config. This mapping is used to carry out the
# feathering process. This field defines the interf_config
# corresponding to this feather config. When data from that
# interf_config is feathered it produces data labeled with this
# feather_config.

# 'res_min_arcsec', 'res_max_arcsec' : these define the minimum and
# maximum angular resolution to be used in postprocessing this configuration. 

# 'res_step_factor' : This is an algorithmic tuning parameter that
# sets the multiplicative step size using in postprocessing
# convolution. This may be deprecated in the near future.

# PHANGS-ALMA examples:

#feather_config  12m+7m+tp   {'interf_config':'12m+7m'}
#feather_config  12m+7m+tp   {'res_min_arcsec':0.5,'res_max_arcsec':7.5,'res_step_factor':1.1}

#feather_config  7m+tp       {'interf_config':'7m'}
#feather_config  7m+tp       {'res_min_arcsec':5.0,'res_max_arcsec':15.0,'res_step_factor':1.1}

##########################################################################

# DELETE AFTER HERE FOR NEW PROJECT, FULL PHANGS-ALMA CASE FOLLOWS

line_product    co21      {'line_tag':'co21','channel_kms':2.5}
line_product    13co21    {'line_tag':'13co21','channel_kms':2.5}
line_product    c18o21    {'line_tag':'c18o21','channel_kms':6.0}

cont_product    cont      {'lines_to_flag':['co','13co','c18o','hcn','hcop']}

interf_config   12m       {'array_tags':['12m']}
interf_config   12m       {'res_min_arcsec':0.5,'res_max_arcsec':7.5,'res_step_factor':1.1}
interf_config   12m       {'clean_scales_arcsec':[0,1,2.5,5.0]}

interf_config   12m+7m    {'array_tags':['12m','7m']}
interf_config   12m+7m    {'res_min_arcsec':0.5,'res_max_arcsec':7.5,'res_step_factor':1.1}
interf_config   12m+7m    {'clean_scales_arcsec':[0,1,2.5,5.0,10.0]}

interf_config   7m        {'array_tags':['7m']}
interf_config   7m        {'res_min_arcsec':5.0,'res_max_arcsec':15.0,'res_step_factor':1.1}
interf_config   7m        {'clean_scales_arcsec':[0,5.0,10.0]}

feather_config  12m+7m+tp   {'interf_config':'12m+7m'}
feather_config  12m+7m+tp   {'res_min_arcsec':0.5,'res_max_arcsec':7.5,'res_step_factor':1.1}

feather_config  7m+tp       {'interf_config':'7m'}
feather_config  7m+tp       {'res_min_arcsec':5.0,'res_max_arcsec':15.0,'res_step_factor':1.1}
